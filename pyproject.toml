[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "probly"
version = "0.1.0"
dynamic = ["readme"]
description = "Uncertainty Representation and Quantification for Machine Learning"
license = "MIT"
requires-python = ">=3.10"
dependencies = [
    # core
    "matplotlib>=3.10.1",
    "mpltern>=1.0.4",
    "numpy<=2.1.2,>=2.0.0",
    "scikit-learn>=1.6.1",
    "torch>=2.6.0",
    "torchvision>=0.21.0",
    "tqdm>=4.67.1",
]
authors = [
    {name = "Paul Hofman", email = "paul.hofman@ifi.lmu.de"},
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    'Operating System :: Microsoft :: Windows',
    'Operating System :: Unix',
    'Operating System :: MacOS',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3.13',
]

[tool.setuptools.packages.find]
where = ["./src"]
include = ["probly*"]

[tool.setuptools.dynamic]
readme = {file = ["README.md", "CHANGELOG.md"], content-type = "text/markdown"}

[project.urls]
# documentation = TODO: we need to add the documentation
source = "https://github.com/pwhofman/probly"
tracker = "https://github.com/pwhofman/probly/issues"
changelog = "https://github.com/pwhofman/probly/blob/main/CHANGELOG.md"

[project.scripts]
probly = "probly:main"

[project.optional-dependencies]
cpu = ["torch==2.6.0"]
cuda12 = ["torch==2.6.0"]

[tool.uv]
conflicts = [[{ extra = "cpu" }, { extra = "cuda12" }]]

[tool.uv.sources]
torch = [
    { index = "torch-cpu", extra = "cpu" },
    { index = "torch-cuda12", extra = "cuda12" },
]

[[tool.uv.index]]
name = "torch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
name = "torch-cuda12"
url = "https://download.pytorch.org/whl/cu124"
explicit = true

[dependency-groups]
test = [
    "pytest>=8.3.5",  # for testing
    "pytest-cov>=6.0.0",  # for coverage
    "pytest-xdist>=3.6.1",  # for parallel testing
]
lint = [
    "ruff>=0.11.2",  # for linting
    "pre-commit>=4.2.0",  # for running the linters pre-commit hooks
]
dev = [
    "ipykernel>=6.29.5",
    "notebook>=7.3.3",
    "ipywidgets",
    {include-group = "test"},
    {include-group = "lint"},
]


[tool.ruff]

line-length = 100
target-version = "py310"
output-format = "full"

[tool.ruff.lint]
# extend-safe-fixes = ["ALL"]  # may nuke the repo beware
select = [
    "E",
    "F",
    "I",
    "UP",
    "A",
    "D",
    "ANN",
    "ARG",
    "B",
    "BLE",
    "C4",
    "ERA",
    "FBT",
    "INP",
    "N",
    #"NPY", # use numpy generator
    "PD",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "PIE",
    "PT",
    #"PTH", # use Path instead of os.path
    "Q",
    "PGH004",
    "RET",
    "RUF",
    "C90",
    "S",
    "SIM",
    "T10",
    #"T20", # remove print statements
    "TID",
    "TCH",
    "W",
    "YTT",
]
ignore = [
    "N812", # Checks for lowercase imports that are aliased to non-lowercase names.
    "E501", # Line too long
    "D203", # 1 blank line required before class docstring
    "D211", # No blank lines allowed before class docstring
    "D213", # Multi-line docstring summary should start at the second line
    "N806", # Variable X in function should be lowercase
    "N803", # Argument name `X` should be lowercase
    "COM812", # Trailing comma missing (conflicts with formatter)
    "PLR2004", # Magic value used in comparison, consider replacing {value} with a constant variable
    "RET504", # Unnecessary assignment to {name} before return statement
]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

#[tool.ruff.lint]
# Extend what ruff is allowed to fix, even it it may break
# This is okay given we use it all the time and it ensures
# better practices. Would be dangerous if using for first
# time on established project.
# extend-safe-fixes = ["ALL"] # TODO use at some point

# Exclude a variety of commonly ignored directories.
[tool.ruff.lint.per-file-ignores]
"tests/*.py" = [
    "S101",
    "INP001",
    "D101",
    "D102",
    "D103",
    "D404",
    "ANN001",
    "ANN201",
    "FBT001",
    "D100",
    "PLR2004",
    "PD901",   #  X is a bad variable name. (pandas)
    "TCH",
    "N803",
    "C901",  # Too complex
]
"__init__.py" = ["I002"]

[tool.pytest.ini_options]
testpaths = ["tests"]
minversion = "8.0"

[tool.coverage.report]
fail_under = 95
directory = "tests"
